PSICOLOGIA DAS CORES===========================================================================================================

-as cores dão sensaçoes diferentes as pessoas
- não é uma escolha conciente
 siginificados das cores(não é uma verdade absoluta)

Vermelho: raiva, paixão, fúria, ira, desejo, excitação, energia, velocidade, força, poder, calor, amor, agressão, perigo, fogo, sangue, guerra, violência
Rosa: amor, inocência, saúde, felicidade, satisfação, romantismo, charme, brincadeira, leveza, delicadeza, feminilidade

Amarelo: sabedoria, conhecimento, relaxamento, alegria, felicidade, otimismo, idealismo, imaginação, esperança, claridade, radiosidade, verão, desonestidade, covardia, traição, inveja, cobiça, engano, doença, perigo

Laranja: humor, energia, equilíbrio, calor, entusiasmo, vibração, expansão, extravagância, excessivo, flamejante

Verde: cura, calma, perseverança, tenacidade, autoconsciência, orgulho, imutabilidade natureza, meio ambiente, saudável, boa sorte, renovação, juventude, vigor, Primavera, generosidade, fertilidade, ciúme, inexperiência, inveja, imaturidade, destruição

Azul: fé, espiritualidade, contentamento, lealdade, paz, tranquilidade, calma, estabilidade, harmonia, unidade, confiança, verdade, confiança, conservadorismo, segurança, limpeza, ordem, céu, água, frio, tecnologia, depressão

Roxo/Violeta: erotismo, realeza, nobreza, espiritualidade, cerimônia, misterioso, transformação, sabedoria, conhecimento, iluminação, crueldade, arrogância, luto, poder, sensibilidade, intimidade

Marrom: materialismo, excitação, terra, casa, ar livre, confiabilidade, conforto, resistência, estabilidade, simplicidade

Preto: não, poder, sexualidade, sofisticação, formalidade, elegância, riqueza, mistério, medo, anonimato, infelicidade, profundidade, estilo, mal, tristeza, remorso, raiva

Branco: sim, proteção, amor, respeito, mesura, pureza, simplicidade, limpeza, paz, humildade, precisão, inocência, juventude, nascimento, inverno, neve, bom, esterilidade, casamento (culturas ocidentais), morte (culturas orientais), frio, clínico, estéril

Prata: riqueza, glamour, fascínio, diferença, natural, liso, suave, macio, elegante, tecnológico

Ouro: preciosidade, riqueza, extravagância, calor, riqueza, opulência, prosperidade, grandeza

"azul é a cor mais aceita pelas pessoas e menos rejeitadas pelas mesmas"

- usar a combinação fundo preto com letra branca em paginas comj pouco texto pois causa cansaço nos olhos
- As cores significam coisas

CIRCULO CROMATICO=============================================================================================
- o circulo cromatico serve para harmonizar as cores

 Cores primarias do circulo cromatico: amarelo, vermelho e azul

 Cores secundarias do circulo cromatico: verde, laranja e violeta

Cores terciarias do circulo cromatico: são cores que ficam entre as primarias e secundarias(dar primeiro o nome da primaria e depois da secundarias ex: azul-esverdiado)
TIPOGRAFIA===============================================================================================================
é um conceito que abrange o estudo, a criação e a aplicação dos caracteres, estilos, formatos e arranjos visuais das palavras.
Anatomia dos tipos =============================================================================================

.Altura x : a altura do x minusculo, vai definir a altura base das letras minusculas
.Altura das maiusculas: o proprio nome se auto explica
.Ascendente: tamanho das letras minusculas que vazaram para cima
.Decedente:  tamanho das letras minusculas que vazaram para baixo
.corpo: a soma da altura de tudo
ITEMS ANATOMICOS========================================================================================
.serifa: pequeno traços em algumas fontes, ela cria uma linha imaginaria que facilita na leitura das palavras

.glifo: a letra em si

.fonte: conjunto de glifos de uma familia

.familia tipografica: variação de uma fonte.

. nem toda fonte tem uma variação grande, ou mesmo uma variação tendo mesmo a normal

CATEGORIAS DE FONTES=======================================================================================

.fontes serifadas: possuem serifas
.fontes sans-serif: fontes sem serifas, recomendado em texto muito.
.fontes monoespaçada: podem ser com ou sem serifa, todas as letras tem os mesmos espaços
.fontes handwrite: simulam fontes feita as maos
.fontes display: fontes que não seguem um padrão e são muitos diferentes dos outros tipos

Combinaçoes seguras de fontes===============================================================================================================
link: https://www.w3schools.com/cssref/css_fonts_fallbacks.php



curiosidade: 16px é o tamanho normal da fonte

Peso (negrito)==============================================================================================================================	

		- fonte mais cheia (negrito) ou fina
		- não serve para fontes simples (arial, verdana, times,...)
		- serve pra fontes como Work Sans (import google)

	font-weight: nome ou número;	    

   nome:	- lighter		número:	- 100   - 500   - 900
		- normal			- 200   - 600
		- bold				- 300   - 700
		- bolder			- 400   - 800


Estilo (itálico):

	font-style: valor;		valor:  - normal
						- italic

Decoração (sublinhado):

	text-decoration: underline;


Shorthand font: simplificando fontes.

   Ex:	 font-family: 'Work Sans', sans-serif;
	         font-weight: bolder;
	         font-size: 3em;
	         font-style: italic;

      Simplificando:

		font:  italic  bolder  3em  'Work Sans', sans-serif;

- A sequência deve ser:	

		font-style   ->   font-weight   ->   font-size   ->   font-family;

- Não precisa ter todas as propriedades, mas a sequência deve ser seguida;

  Ex:		font:  bold  2em  'Work Sans';

IDs CSS=======================================================================================================

TUDO QUE É ID EM HTML É # EM CSS
TUDO QUE CLASS EM HTML É . EM CSS
: SÃO UMA PSEUDO CLASSE
:: SÃO PSEUDO ELEMENTO
> SÃO CHILDREN

SO PODER HAVER UM ID ESPECIFICO EX: SO PODE TER UM ELEMENTO COM O ID FRANGO
POREM PODE HAVER VARIOS ELEMENTOS COM O MESMO CLASS FRANGO

PSEUDO-CLASSES=============================================================================================================

A tag <div> cria um bloco genérico para agrupar conteúdos. Ela é equivalente, no grupo de tags de bloco, ao que
 a tag <span> representa no grupo de tags inline/conteúdo. A função da tag <div> é separar os conteúdos do código HTML em divisões de espaço/conjunto, sem qualquer peso semântico.


selector:pseudo-class -> Usada para definir um estado especial de um elemento.
	Pseudo Classes
		:active			a:active        			Seleciona o link ativo
		:hover			a:hover				Seleciona links ao passar o mouse
		:link				a:link				Seleciona todos os links não visitados
		:visited			a:visited				Seleciona todos os links visitados
		:checked			input:checked   			Seleciona cada elemento <input> marcado
		:disabled			input:disabled	 		Seleciona cada elemento <input> desabilitado
		:empty			p:empty				Seleciona cada elemento <p> que não tem filhos
		:enabled			input:enabled			Seleciona cada elemento <input> habilitado
		:first-child		p:first-child			Seleciona todos os elementos <p> que são o primeiro filho de seu pai
		:first-of-type		p:first-of-type			Seleciona cada elemento <p> que é o primeiro elemento <p> de seu pai
		:focus			input:focus			Seleciona o elemento <input> que tem foco
		:in-range			input:in-range			Seleciona elementos <input> com um valor dentro de um intervalo especificado
		:invalid			input:invalid			Seleciona todos os elementos <input> com um valor inválido
		:lang(language)		p:lang(it)				Seleciona cada elemento <p> com um valor de atributo lang começando com "it"
		:last-child		p:last-child			Seleciona todos os elementos <p> que são o último filho de seu pai
		:last-of-type		p:last-of-type			Seleciona cada elemento <p> que é o último elemento <p> de seu pai
		:not(selector)		:not(p)				Seleciona todos os elementos que não são um elemento <p>
		:nth-child(n)		p:nth-child(2)			Seleciona cada elemento <p> que é o segundo filho de seu pai
		:nth-last-child(n)	p:nth-last-child(2)		Seleciona cada elemento <p> que é o segundo filho de seu pai, contando a partir do último filho
		:nth-last-of-type(n)	p:nth-last-of-type(2)		Seleciona cada elemento <p> que é o segundo elemento <p> de seu pai, contando a partir do último filho
		:nth-of-type(n)		p:nth-of-type(2)			Seleciona cada elemento <p> que é o segundo elemento <p> de seu pai
		:only-of-type		p:only-of-type			Seleciona cada elemento <p> que é o único elemento <p> de seu pai
		:only-child		p:only-child			Seleciona cada elemento <p> que é o único filho de seu pai
		:optional			input:optional			Seleciona elementos <input> sem atributo "obrigatório"
		:out-of-range		input:out-of-range		Seleciona elementos <input> com um valor fora de um intervalo especificado
		:read-only			input:read-only			Seleciona elementos <input> com um atributo "readonly" especificado
		:read-write		input:read-write			Seleciona elementos <input> sem atributo "readonly"
		:required			input:required			Seleciona elementos <input> com um atributo "obrigatório" especificado
		:root				root					Seleciona o elemento raiz do documento
		:target			#news:target			Seleciona o elemento #news ativo atual (clicado em um URL que contém esse nome de âncora)
		:valid			input:valid			Seleciona todos os elementos <input> com um valor válido	
	Pseudo Elements
		::after			p::after				inserir conteúdo após cada elemento <p>
		::before			p::before				Inserir conteúdo antes de cada elemento <p>
		::first-letter		p::first-letter			Seleciona a primeira letra de cada elemento <p>
		::first-line		p::first-line			Seleciona a primeira linha de cada elemento <p>
		::selection		p::selection			Seleciona a parte de um elemento que é selecionado por um usuário

Modelo de Caixa====================================================================================================================================

Aninhamente = termo usandoquando e elemento (nesse caso caixa) está dentro de outra. ou seja um elementa está aninhado em outro elemento.

.Uma caixa(elemento) possui um tamanho. esse tamnho é espeficado pela height(altura) e width(largura);

.Border(ou borda) é uma linha que circunda o elemento/conteudo

.o espaço entre o conteudo/elemento e o border se chama padding(preenchimento)

.e tem o traçado(outline) que fica depois dar border

.o espaço externo que fica fora da traçado(outline) se chama margin(Margem)

Box-level: um elemento box-level sempre se inicia em uma linha nova e ele ocupa a largura total da tela. A tag
mais famosa desse tipo é a <div>
EX:

----------------------------------------------------------------------------------
-------------------------------------------------------- 
XXXXXXXXX
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

Inline-level: um elemento inline level ele nao quebra a linha , ele não ocupa somente o necessario e dar para
continuar outros conteudos logo apos ele. a tag mais famosa desse tipo é a <span>

EX:

---------------------------------------------------------------------------------
--------------------------------------------------------------- XXXXXXXXXX ------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------

CURIOSIDADE: user-agent é o seu navegador exibido o seu conteudo

Propriedades de borda:

   largura	->	border-width: 10px;

   estilo	->	border-style: solid;	 (sólida)
					     : dashed;	 (tracejada)
					     : dotted;	 (pontilhada)
					     : double;	 (dupla)
					     : groove;	 (em 3d)

   cor 	->	border-color: red;

  - Shorthand: 

	border: 10px solid red (largura, estilo, cor)


Propriedades de padding:

	padding-top: 10px;	   (de topo)
	padding-right: 10px;	   (à direita)
	padding-bottom: 10px    (de baixo)
	padding-left: 10px;	   (à esquerda)

  - Shorthand: 
	
	padding: 15px 10px 15px 10px;    (sent. horário: top, right, bottom, left)
	padding: 10px; 		(os 4 lados iguais a 10px)
	padding: 15px 10px;	 (cima e baixo 15px / esquerda e direita 10px)

		   
Acessar DevTools do Chrome: botão direito no corpo do site -> inspecionar

box-level = block-level


PROPRIEDADES DE ESTILO DE CADA PARTE ANATÔMICA DE UMA CAIXA:

PROPRIEDADES - MARGIN: As principais Propriedades de Estilo para margin são: " margin-top " (margin da parte de cima de um elemento), " margin-right " (parte direita), " margin-bottom " (parte de baixo) e " margin-left " (parte esquerda) - O valor dessas propriedades geralmente é inserido em px.

Nota: Para centralizar um elemento (CAIXA) na tela, de forma automática , devemos usar a Propriedade de Estilo " margin " com o valor " auto ". Isso fará com que elementos (caixas) sejam centralizados horizontalmente de forma automática, mesmo que o tamanho da tela mude.

Como no "padding", também existe um SENTIDO/ORDEM correta PARA INSERIR as propriedades de margin descritas logo acima. A "direção" correta é: 

1) - Top  
2) - Right  
3) - Bottom 
4) - left

Exemplo:

margin-top: 10px;
margin-right: 10px;
margin-bottom: 10px;
margin-left: 10px;

É importante declarar nessa ordem, pois é necessário ser condizente com a direção e sentido padrão do Modelo de Caixas do DevTools , que segue a direção de um ponteiro de relógio.

Também podemos utilizar uma Shorthand para inserir e simplificar todas essas declarações de margin em uma única linha, exemplo: " margin: 15px 10px 10px 15px; "

OBSERVAÇÃO: Mesmo em shorthands como a do exemplo acima, os valores devem ser declarados na ordem orientada ( top, right, bottom e left ), para que consigamos nos nortear e especificar corretamente o espaçamento certo o para respectivo lado/sentido.

Se quisermos configurar os quatro lados do margin de uma só vez e constituir um margin igualitário (mesmo valor nos quatro lados), podemos simplesmente inserir uma única vez a Propriedade "margin" com o valor em px desejado, esse valor será inserido nos quatro lados do elemento automaticamente , exemplo: " margin: 10px; "

IMPORTANTE : Se quisermos centralizar um elemento (CAIXA) de forma automática, mas ainda assim , alterar o margin do sentido de cima (top) ou de baixo (bottom), devemos inserir a seguinte declaração shorthand: " margin: 10px auto 10px auto; " 

Também podemos colocar só dois valores em uma propriedade margin, exemplo: " margin: 10px 20px; " - Quando colocamos somente dois valores, significa que os sentidos de CIMA E DE BAIXO são representados pelo primeiro valor e os sentidos de ESQUERDA E DIREITA são representados pelo segundo valor .

PROPRIEDADES - OUTLINE: As principais Propriedades de Estilo para outline são: " outline-width " (espessura da outline), " outline-style " (estilo da outline) e " outline-color " (cor da outline).

Os valores mais utilizados para a Propriedade de Estilo que define o estilo de uma outline (outline-style), são: " solid " (linha sólida), " dashed " (outline tracejada), " dotted " (outline pontilhada), " double " (linha dupla) e o " groove " (outline "3d")

Sendo que podemos utilizar uma shorthand para inserir e simplificar todas essas declarações de outline em uma única linha, exemplo: " outline: 10px solid black; " (Siga a ordem de inserção de valores do exemplo na hora de usar uma shorthand, caso contrário não funcionará corretamente)


.A PROPRIEDADE DISPLAY DO CSS PODE MUDAR A PROPRIEDADE NATURAL DO ELEMENTO  (EX: <a> que é um elemento inline, usando o display: block; vira 
um elemento block) 

RESPONSIVIDADE ====================================================================================================================================

Max-width
Ex:max-width:300px;
(Tudo que estiver acima de 300px carregara a imagem grande,se diminuir ou chegar a 300 px, carrega a imagem pequena)

Min-width
Ex:min-width:300px;
(Tudo que estiver entre 1px e 299px carregara a imagem pequena,se ultrapassar os 300px carregara a imagem grande.)

Margin: 0 auto; faz com que o elemento filho fique centraliado dentro do elemento pai independente do tamanho da tela;

img{
	width: 100%; faz com que a imagem não quebre os limites do conteudo
}	


CENTRALIZAR UM VIDEO===========================================================================================================
- Primeiro envelopa a tag iframe dentro de um div e coloque uma class ex: class="video";

- No CSS de a div da class escolhida margin: 0px -20px;, coloque um background-color: (sua cor de preferencia); para ver melhor oque tá acontecendo.

- Ainda seguindo no CSS adicione no iframe usando esse caminho div.(a classe que vc colocou) iframe{} o position: absolute; enquanto no 
div.(a classe que vc colocou){} vc coloca o position: relative; e padding-bottom: 50%; (ajuste a porcentagem em relação a sua necessidade)

- No div.(a classe que vc colocou) iframe{} vc coloca top: 5%; left: 5%; width: 90%; height: 90%; (ajuste a porcentagem em relação a sua necessidade)